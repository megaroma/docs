//----------

import Foundation

class MegaTest {
    var Test: String!
    
    func run() -> String {
        return self.Test
    }
    
    init(Boo: String) {
        self.Test = Boo
    }
}

//in code:

           var test:MegaTest =  MegaTest(Boo: "Kessy Kaka")
            self.label.text = test.run()



//---------------Static Class: -----------

	
import Foundation

class StaticTest {
    
    class func Test () -> String {
        return "Booo "
    }
    
}


//usage:

self.label.text = test.run() + StaticTest.Test()




//-------------patern Singleton ---------------------

class Singleton {
  class var sharedInstance: Singleton {
    struct Static {
      static var instance: Singleton?
      static var token: dispatch_once_t = 0
    }

    dispatch_once(&Static.token) {
      Static.instance = Singleton()
    }

    return Static.instance!
  }
}